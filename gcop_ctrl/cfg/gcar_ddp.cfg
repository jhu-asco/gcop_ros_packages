#! /usr/bin/env python
# Create a cfg file for getting control parameters for dmoc optimal controller

PACKAGE = 'gcop_ctrl'

from dynamic_reconfigure.parameter_generator_catkin import *
gen = ParameterGenerator()
gen.add("iterate"        , bool_t   , 0                 , "iterate"     , False)
gen.add("reinit"         , bool_t   , 0                 , "reinitialize ddp", False)
gen.add("send_rviz",       bool_t   , 0                 , "send the trajectory to rviz", False)
gen.add("debug_on_all"   , bool_t   , 0                 , "all debug output enabled", True)
gen.add("debug_on_ddp"   , bool_t   , 0                 , "ddp specific output enabled", True)

#params for the ddp problem
gen.add("x0"              , double_t , 0                 , "Initial xposn"                ,  2   , -9000    , 9000    )
gen.add("y0"              , double_t , 0                 , "Initial yposn"                , -1   , -9000    , 9000    )
gen.add("th0"             , double_t , 0                 , "Initial car angle"            ,  0   ,    -3.14 ,    3.14 )
gen.add("v0"              , double_t , 0                 , "Initial yvel"                 ,  0   ,    -9    ,    9    )
gen.add("xf"              , double_t , 0                 , "Final xposn"                  ,  0   , -9000    , 9000    )
gen.add("yf"              , double_t , 0                 , "Final yposn"                  ,  0   , -9000    , 9000    )
gen.add("thf"             , double_t , 0                 , "Final angle of the car"       ,  0   ,    -3.14 ,    3.14 )
gen.add("vf"              , double_t , 0                 , "FinalBody ang vel"            ,  0   ,    -9    ,    9    )
gen.add("tf"              , double_t , 0                 , "Final Time"                   , 10   ,     0    ,   40    )
gen.add("n"               , int_t    , 0                 , "Number of segments"           , 32   ,     0    ,  100    )
gen.add("nit"             , int_t    , 0                 , "Number of iterations of dmoc" , 32   ,     0   ,   100    )

# cost params
gen.add("qf00"             , double_t , 0                 , "FinStatecost"                 , 1      , 0   , 100	)
gen.add("qf11"             , double_t , 0                 , "FinStatecost"                 , 1      , 0   , 100	)
gen.add("qf22"             , double_t , 0                 , "FinStatecost"                 , 1      , 0   , 100	)
gen.add("qf33"             , double_t , 0                 , "FinStatecost"                 , 1      , 0   , 100	)
gen.add("r00"              , double_t , 0                 , "Controlcost"                  , 0.005  , 0   , 10	)
gen.add("r11"              , double_t , 0                 , "Controlcost"                  , 0.001  , 0   , 10	)

#step= mu*step
gen.add("mu"               , double_t , 0                 , ""                             , 0.5    , 0   , 10	)

#2nd param is the name of the package this "might" be used in
exit(gen.generate(PACKAGE , "gcar_ddp_planner" , "GcarDDP"))





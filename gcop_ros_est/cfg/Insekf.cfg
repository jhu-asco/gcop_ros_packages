#!/usr/bin/env python
PACKAGE = "gcop_ros_est"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("enable_mag",             bool_t, 0, "Use magnetometer in estimation or not", True)
gen.add("enable_tf_publisher",    bool_t, 0, "Send estimated pose as TF", True)
gen.add("period_tf_publish",      double_t, 0, "duration after which a new tf message is sent",0.1, 0.01, 1 )

gen.add("reinitialize_filter",    bool_t, 0, "Reinitialize from the correct gps position", False)
gen.add("enable_true_yaw",        bool_t, 0, "Use true yaw for display(makes sense if mag is enabled) else keep constant", True)
gen.add("set_gps_z_cov0",         bool_t, 0, "Set gps z cov to zero", True)

gen.add("enable_imu_viz",         bool_t, 0, "Publish imu visualization messages", True)
gen.add("enable_cov_disp_gps",        bool_t, 0, "Enable display of covariance of gps", True)
gen.add("enable_cov_disp_est",        bool_t, 0, "Enable display of covariance of estimate", True)

# LAT LON OF ORIGIN
gen.add("lat0_deg", double_t, 0, "latitude of origin",39.3257305556, -180, 180 )
gen.add("lon0_deg", double_t, 0, "longitude of origin",-76.6223472222, -180, 180 )

gen.add("name_map",         str_t,  0, "The frame with respect to which the tf is published",  "map") 
gen.add("name_base_link",         str_t,  0, "The base_link frame",  "/pixhawk/base_link") 
gen.add("name_gps_local",         str_t,  0, "The gps position in local coordinates",  "/pixhawk/gps_local") 
gen.add("name_topic_imu",         str_t,  0, "Topic for publishing imu messages for display",  "/pixhawk/imu_viz") 

exit(gen.generate(PACKAGE, "gcop_insekf_test", "Insekf"))

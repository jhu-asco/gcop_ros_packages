#!/usr/bin/env python
PACKAGE = "gcop_ros_est"

#The level is assigned the following value based on

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#general
gen.add("dyn_debug_on",    bool_t, 0, "Display debug data", True)
gen.add("dyn_pause",    bool_t, 0, "Pause publishing of data", False)
gen.add("dyn_reinit",   bool_t, 0, "Start publishing from initial state", False)
gen.add("dyn_tmax",     double_t, 0, "Duration of simulated data production", -1, -1, 10000)

#output format
enum_output_type = gen.enum([ gen.const("Vector3Stamped",      int_t, 0, "all data published as geometry_msgs/Vector3Stamped"),
                              gen.const("RosDefault",     int_t, 1, "ins published as sensor_msgs/Imu, mag as sensor_msgs/MagneticField ")],
                              "An enum to set output publish type")
gen.add("dyn_type_sensor_msg", int_t, 2, "Decides insmag data publish type", 0, 0, 1, edit_method=enum_output_type)


#noise characteristics
gen.add("dyn_cov_mag",   double_t, 4, "Duration of simulated data production", 1e-4, 0, 1)
gen.add("dyn_cov_acc",   double_t, 4, "Duration of simulated data production", 1e-4, 0, 1)
gen.add("dyn_cov_gyro",  double_t, 4, "Duration of simulated data production",  0.1, 0, 10)
gen.add("dyn_cov_gps_xy",double_t, 4, "Duration of simulated data production",    4, 0, 100)
gen.add("dyn_cov_gps_z", double_t, 4, "Duration of simulated data production",    1, 0, 100)

#data rate
gen.add("dyn_rate_gps",  double_t, 8, "GPS data rate in Hz",  1, 0, 20)
gen.add("dyn_rate_mag",  double_t, 8, "Mag data rate in Hz", 20, 0, 100)
gen.add("dyn_rate_imu",  double_t, 8, "Imu data rate in Hz", 50, 0, 100)
gen.add("dyn_rate_acc",  double_t, 8, "Acc data rate in Hz", 50, 0, 1000)
gen.add("dyn_rate_gyro", double_t, 8, "Gyro data rate in Hz",50, 0, 1000)

# LAT LON OF ORIGIN
gen.add("dyn_lat0_deg", double_t, 16, "latitude of origin",39.3257305556, -180, 180 )
gen.add("dyn_lon0_deg", double_t, 16, "longitude of origin",-76.6223472222, -180, 180 )
gen.add("dyn_alt0_m", double_t, 16, "altitude of origin",0, 0, 1000 )



exit(gen.generate(PACKAGE, "sim_ins_mag_gps", "SimSens"))

#parameters to be used with gcop_insmagekf_test.cpp

###################################
pause:    false #if true then it will pause at the first step of kalman filtering 
debug_on: true  # Print important data on cout
mag_on:   false # Perform mag update step
gps_on:   true  # Preform gps update step
diag_on:  true  # Publish diagnostics information on a topic
tf_on:    true  # Display poses as tf data

###################################
# Number of readings for mean and cov computation
n_avg: 100

###################################
# frame names
#   (un-modifiable in reconfigure)
#   strfrm_map:     The frame of origin of world
#   strfrm_robot:   The frame of origin of robot
#   strfrm_gps_lcl: The gps location with respect to map frame
strfrm_map: "/map"          
strfrm_robot: "/base_link"  
strfrm_gps_lcl: "/gps_lcl"

###################################
# Sensor format
# (un-modifiable in reconfigure)
#   0:Vector3Stamped
#   1:RosDefault
type_sensor_msg: 0

###################################
# Topic name
#   (un-modifiable in reconfigure)
strtop_gps: "/gps" #common to both sensor format0 and format1

strtop_imu: "" #sensor format 1
strtop_mag: "" #sensor format 1

strtop_mag_v3s: "/multisense/imu/magnetometer_vector"  #sensor format 0
strtop_acc_v3s: "/multisense/imu/accelerometer_vector" #sensor format 0
strtop_gyr_v3s: "/multisense/imu/gyroscope_vector"     #sensor format 0

###################################
# Topic name(Output)
#   (un-modifiable in reconfigure)
strtop_odom:       "/insekf/pose"
strtop_diag:       "/insekf/diag"
strtop_marker_cov: "/visualization_marker"

###################################
# hz_var: frequency at which a message will be published
#   value=0 will result in the data to be sent at the max freq
#   value<0 will disable puslishing the data 
hz_tf:   10  # TF for gps_lcl and gps and their ellipsoid of 1SD

###################################
# Origin of map frame in [lat(deg) , lon(deg) , alt(m)]
# (un-modifiable in reconfigure)
map0: [39.3257305556 , -76.6223472222 , 0.0]

# Mag reference
#   In the frame of the robot
#   (un-modifiable in reconfigure)
#   http://www.ngdc.noaa.gov/geomag-web/#igrfwmm
m0: [-4045.4 , 20503.7, -47202.3]

# Acc reference
#   In the frame of the robots
#   (un-modifiable in reconfigure)
a0: [0.0 , 0.0 , 9.80665]

a0_tol: 10.2 # An acceleration reading of 

###################################
# Sensor relative position 
#   (un-modifiable in reconfigure)
#   robot2sensor: [x y z qx qy qz qw]
robot2gyr:  [ 0.0 , 0.0 , 0.0 ,-0.500 , 0.500 ,-0.500 , 0.500]
robot2acc:  [ 0.0 , 0.0 , 0.0 , 0.000 , 0.707 , 0.000 , 0.707]


###################################
# InsState initialization 
#   (not modifiable in dynamic reconfigure)
#   cov: ["yaml", 0.1 , 0.1 , 0.1] 
#     Load the covariance from this yaml file.
#   cov: ["est"]
#     Estimate upon startup. Note that the sensor has to be still for first 2 seconds
#   Rotation matrix init
x0_R: ['yaml',1.0, 0.0, 0.0,
              0.0, 1.0, 0.0,
              0.0, 0.0, 1.0]
#x0_R: ["est"]   #estimated from acc and mag readings           
x0_R_cov: ['yaml',0.1, 0.1 , 0.1]
                  
#x0_R_cov:  ["est"] #Combines           
#   Gyro bias init
#   "average": Average the readings for t_bg seconds
#x0_bg: ['yaml',0.1, 0.0, 0.0]
x0_bg:   ["est"]
#x0_bg: ['yaml',5.03964e-05   -0.0122746 -0.000642936]
x0_bg_cov: ["est"]  #set to gyro cov
#x0_bg_cov: ['yaml',7.83654e-06,1.95854e-05 ,1.61591e-05]

#   Accelerometer bias init
x0_ba: ["yaml",0.0 , 0.0 , 0.0]
x0_ba_cov: ["yaml",1.0e-10 , 1.0e-10 , 1.0e-10]

#   Position init
#   "gps":         Init from gps 
#   [0.0,0.0,0.0]: Initialized by value 
x0_p:  ["est"] #It will be initialized with gps reading relative to map0 param(find below)      
x0_p_cov: ["est"] # Will be initialized with gps cov

#   Velocity init
x0_v: ["yaml", 0.0, 0.0, 0.0]
x0_v_cov: ["yaml", 1.0e-4 , 1.0e-4 , 1.0e-4]


###################################
# Control Noise Parameter
#   Options: 
#   cov: ["dyn", cov_x, cov_y, cov_z]
#     Use the mentioned cov which is also modifiable in dynamic reconfigure
#   cov: ["msg"]
#     Use covariance provided in the sensor msgs
#   cov: ["est"]
#     Evaluate the covariance upon startup. Note that the sensor has to be still for first 2 seconds

#cov_ctrl_gyr:  ["dyn",7.83654e-06,1.95854e-05 ,1.61591e-05]
cov_ctrl_gyr:  ["dyn",7.83654e-07,1.95854e-07 ,1.61591e-07]
#cov_ctrl_gyr: ["msg"]
#cov_ctrl_gyr: ["est"]
cov_ctrl_acc:  ["dyn",1.0e-3,1.0e-3,1.0e-3] 
#cov_ctrl_acc: ["msg"]
#cov_ctrl_acc: ["est"]
#cov_ctrl_su: ["dyn",9.0e-16,9.0e-16,9.0e-16]  # gyro bias rate-of-change white noise stdev (spectral density)
#cov_ctrl_sa: ["dyn",9.0e-12,9.0e-12,9.0e-12]  #acceleration bias rate-of-change white noise stdev (spectral density)
cov_ctrl_su: ["dyn",9.0e-16,9.0e-16,9.0e-16]  # gyro bias rate-of-change white noise stdev (spectral density)
cov_ctrl_sa: ["dyn",9.0e-24,9.0e-24,9.0e-24]  #acceleration bias rate-of-change white noise stdev (spectral density)
#     

###################################
# Sensor Noise parameters
#   Options: 
#   cov: ["dyn", cov_x, cov_y, cov_z]
#     Use the mentioned cov which is also modifiable in dynamic reconfigure
#   cov: ["msg"]
#     Use covariance provided in the sensor msgs
#   cov: ["est"]
#     Evaluate the covariance upon startup. Note that the sensor has to be still for first 2 seconds
cov_sens_mag:  ["dyn",1.0e-4,1.0e-4,1.0e-4] #covariance of the magnetometer where the readings lie on a unit sphere
#cov_sens_mag: ["msg"]
#cov_sens_mag: ["est"]
cov_sens_acc:  ["dyn", 1.0e-4,1.0e-4,1.0e-4]
#cov_sens_acc: ["msg"]
#cov_sens_acc: ["est"]
cov_sens_gps: ["dyn",4.0,4.0,1.0]
#cov_sens_gps: ["msg"]
#cov_sens_gps: ["est"]

###################################
#scaling to convert the imu readings to si units
scale2si_gyr: 0.01745329251 #pi/180
scale2si_acc: 9.80665

###################################
# Magnetometer calibration parameter
#   (un-modifiable in reconfigure)
#   linear and translation refers to components for Eigen::Transform
#   The transform takes the raw magnetometer reading translates to origin and scales
#     it along appropriate eigen vectors such that all readings lie on a unit sphere
#     and puts them into the right hand coordinate system( many mag sensors don't)    
#     which is in the frame of the robot(thats is why there is no robot2mag param above)       
magcal_linear:    [0.034536596975320  , 3.069733122958818 , -0.103880262558144,
                  -0.024735495399356  ,-0.103880262558144 ,  2.505440373398652,
                  -3.191912847253495  ,-0.034536596975320 ,  0.024735495399356]
                  
magcal_translation: [0.842982236993421, 0.347266529162023, 0.000208168402332]  

# Accelerometer calibration parameter
#   (un-modifiable in reconfigure)
#   linear and translation refers to components for Eigen::Transform
#   The transform takes the raw magnetometer reading translates to origin and scales
#     it along appropriate eigen vectors such that all readings lie on a unit sphere
#     assuming that the accelerometer gives reading in units of g
acccal_linear:  [0.971611407904773 , -0.000820915220433 ,  0.000778412214922,
                -0.000820915220433 ,  0.985891072947463 , -0.000211736405367,
                 0.000778412214922 , -0.000211736405367 ,  0.965471268022928]
    
acccal_translation: [-0.007418045344934 , -0.040701211637869 , -0.069864932729539]